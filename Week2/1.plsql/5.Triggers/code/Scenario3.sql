-- Drop trigger and tables if exist
BEGIN EXECUTE IMMEDIATE 'DROP TRIGGER CheckTransactionRules'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE Transactions CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE Accounts CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END;
/

-- Create Accounts table
CREATE TABLE Accounts (
    AccountID NUMBER PRIMARY KEY,
    AccountName VARCHAR2(100),
    Balance NUMBER
);

-- Create Transactions table
CREATE TABLE Transactions (
    TransID NUMBER GENERATED BY DEFAULT AS IDENTITY,
    AccountID NUMBER,
    Amount NUMBER,
    Type VARCHAR2(10), -- 'Deposit' or 'Withdrawal'
    TransDate DATE DEFAULT SYSDATE
);

-- Insert accounts
INSERT INTO Accounts VALUES (1, 'Ravi', 5000);
INSERT INTO Accounts VALUES (2, 'Neha', 1000);
COMMIT;

-- Create BEFORE INSERT trigger to enforce rules
CREATE OR REPLACE TRIGGER CheckTransactionRules
BEFORE INSERT ON Transactions
FOR EACH ROW
DECLARE
    accBalance NUMBER;
BEGIN
    -- Fetch current balance
    SELECT Balance INTO accBalance FROM Accounts WHERE AccountID = :NEW.AccountID;

    IF :NEW.Type = 'Withdrawal' THEN
        IF :NEW.Amount > accBalance THEN
            RAISE_APPLICATION_ERROR(-20001, 'Withdrawal exceeds account balance');
        END IF;
        -- Optionally deduct immediately
        UPDATE Accounts SET Balance = Balance - :NEW.Amount WHERE AccountID = :NEW.AccountID;
    ELSIF :NEW.Type = 'Deposit' THEN
        IF :NEW.Amount <= 0 THEN
            RAISE_APPLICATION_ERROR(-20002, 'Deposit must be positive');
        END IF;
        UPDATE Accounts SET Balance = Balance + :NEW.Amount WHERE AccountID = :NEW.AccountID;
    ELSE
        RAISE_APPLICATION_ERROR(-20003, 'Unknown transaction type');
    END IF;
END;
/

-- Test valid deposit
INSERT INTO Transactions (AccountID, Amount, Type) VALUES (1, 2000, 'Deposit');

-- Test valid withdrawal
INSERT INTO Transactions (AccountID, Amount, Type) VALUES (2, 500, 'Withdrawal');

-- Test invalid withdrawal
BEGIN
    INSERT INTO Transactions (AccountID, Amount, Type) VALUES (2, 10000, 'Withdrawal');
END;
/

-- Show result
SELECT * FROM Accounts;
SELECT * FROM Transactions;
